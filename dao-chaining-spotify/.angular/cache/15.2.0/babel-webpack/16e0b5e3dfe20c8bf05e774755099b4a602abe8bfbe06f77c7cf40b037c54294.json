{"ast":null,"code":"import { Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/authentication.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../services/account.service\";\nimport * as i4 from \"../../services/alert.service\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@ngneat/hot-toast\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"@angular/material/button\";\nimport * as i9 from \"@angular/material/form-field\";\nimport * as i10 from \"@angular/material/input\";\nfunction LoginComponent_mat_error_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Email address is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_mat_error_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Please enter a valid email address \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_mat_error_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Password is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(\n    // private formBuilder: FormBuilder,\n    authenticationService, route, router, accountService, alertService, fb, toast) {\n      this.authenticationService = authenticationService;\n      this.route = route;\n      this.router = router;\n      this.accountService = accountService;\n      this.alertService = alertService;\n      this.fb = fb;\n      this.toast = toast;\n      // loginForm: FormGroup;\n      this.loginForm = this.fb.group({\n        email: [\"\", [Validators.required, Validators.email]],\n        password: [\"\", Validators.required]\n      });\n      this.loading = false;\n      this.submitted = false;\n    }\n    // ngOnInit() {\n    //   this.loginForm = this.formBuilder.group({\n    //     username: [\"\", Validators.required],\n    //     password: [\"\", Validators.required],\n    //   });\n    ngOnInit() {\n      // get return url from route parameters or default to '/'\n      this.returnUrl = this.route.snapshot.queryParams[\"returnUrl\"] || \"/\";\n    }\n    get email() {\n      return this.loginForm.get(\"email\");\n    }\n    get password() {\n      return this.loginForm.get(\"password\");\n    }\n    // convenience getter for easy access to form fields\n    get f() {\n      return this.loginForm.controls;\n    }\n    // onSubmit() {\n    //   this.submitted = true;\n    //   // reset alerts on submit\n    //   this.alertService.clear();\n    //   // stop here if form is invalid\n    //   if (this.loginForm.invalid) {\n    //     return;\n    //   }\n    //   this.loading = true;\n    //   this.accountService\n    //     .login(this.f.username.value, this.f.password.value)\n    //     .pipe(first())\n    //     .subscribe(\n    //       (data) => {\n    //         this.router.navigate([this.returnUrl]);\n    //       },\n    //       (error) => {\n    //         this.alertService.error(error);\n    //         this.loading = false;\n    //       }\n    //     );\n    // }\n    submit() {\n      const {\n        email,\n        password\n      } = this.loginForm.value;\n      if (!this.loginForm.valid || !email || !password) {\n        return;\n      }\n      this.authenticationService.login(email, password).pipe(this.toast.observe({\n        success: \"Logged in successfully\",\n        loading: \"Logging in...\",\n        error: ({\n          message\n        }) => `There was an error: ${message} `\n      })).subscribe(() => {\n        this.router.navigate([this.returnUrl]);\n      });\n    }\n  }\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthenticationService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AccountService), i0.ɵɵdirectiveInject(i4.AlertService), i0.ɵɵdirectiveInject(i5.NonNullableFormBuilder), i0.ɵɵdirectiveInject(i6.HotToastService));\n  };\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 18,\n    vars: 4,\n    consts: [[1, \"col-md-6\", \"offset-md-3\", \"mt-5\", \"login-position\"], [1, \"card\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\"], [\"matInput\", \"\", \"placeholder\", \"Email address\", \"formControlName\", \"email\"], [4, \"ngIf\"], [\"matInput\", \"\", \"type\", \"password\", \"placeholder\", \"Password\", \"formControlName\", \"password\"], [1, \"center\", \"margin-top\"], [\"type\", \"submit\", \"mat-raised-button\", \"\", \"color\", \"primary\"], [\"routerLink\", \"/sign-up\", 1, \"sign-up-link\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"form\", 3);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.submit();\n        });\n        i0.ɵɵelementStart(4, \"mat-form-field\");\n        i0.ɵɵelement(5, \"input\", 4);\n        i0.ɵɵtemplate(6, LoginComponent_mat_error_6_Template, 2, 0, \"mat-error\", 5);\n        i0.ɵɵtemplate(7, LoginComponent_mat_error_7_Template, 2, 0, \"mat-error\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"mat-form-field\");\n        i0.ɵɵelement(9, \"input\", 6);\n        i0.ɵɵtemplate(10, LoginComponent_mat_error_10_Template, 2, 0, \"mat-error\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 7)(12, \"button\", 8);\n        i0.ɵɵtext(13, \"Login\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"span\", 7);\n        i0.ɵɵtext(15, \"New to our platform? \");\n        i0.ɵɵelementStart(16, \"a\", 9);\n        i0.ɵɵtext(17, \"Sign up!\");\n        i0.ɵɵelementEnd()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.email == null ? null : ctx.email.errors == null ? null : ctx.email.errors[\"required\"]);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.email == null ? null : ctx.email.errors == null ? null : ctx.email.errors[\"email\"]);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.password == null ? null : ctx.password.errors == null ? null : ctx.password.errors[\"required\"]);\n      }\n    },\n    dependencies: [i7.NgIf, i2.RouterLink, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.FormGroupDirective, i5.FormControlName, i8.MatButton, i9.MatFormField, i9.MatError, i10.MatInput],\n    styles: [\".login-position[_ngcontent-%COMP%]   .card[_ngcontent-%COMP%]{justify-content:center;display:flex;flex-direction:row;align-content:center;width:100%;max-width:430px;background:#25052d;border-radius:14px;padding:15px}.form-control[_ngcontent-%COMP%]{margin-bottom:15px;max-width:200px;height:30px}.login-position[_ngcontent-%COMP%]   .btn-primary[_ngcontent-%COMP%]{color:#fff;font-weight:700;margin-top:15px;padding:10px;border:2px solid #fe5e88;background-color:#fe5e88;cursor:pointer;border-radius:4px}.login-position[_ngcontent-%COMP%]   .btn-secondary[_ngcontent-%COMP%]{color:#fff;font-weight:700;margin-top:15px;padding:5px;border:2px solid #0b7465;background-color:#0b7465;cursor:pointer;border-radius:4px}h3[_ngcontent-%COMP%]{color:#fff;font-size:large}.buttons[_ngcontent-%COMP%]{display:flex;justify-content:space-between}\"]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}