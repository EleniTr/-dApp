{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from \"@angular/core\";\nimport { Validators } from \"@angular/forms\";\nimport { switchMap } from \"rxjs/operators\";\nexport function passwordsMatchValidator() {\n  return control => {\n    var _a, _b;\n    const password = (_a = control.get(\"password\")) === null || _a === void 0 ? void 0 : _a.value;\n    const confirmPassword = (_b = control.get(\"confirmPassword\")) === null || _b === void 0 ? void 0 : _b.value;\n    if (password && confirmPassword && password !== confirmPassword) {\n      return {\n        passwordsDontMatch: true\n      };\n    } else {\n      return null;\n    }\n  };\n}\nlet SignUpComponent = class SignUpComponent {\n  constructor(AuthenticationService, router, toast, usersService, fb) {\n    this.AuthenticationService = AuthenticationService;\n    this.router = router;\n    this.toast = toast;\n    this.usersService = usersService;\n    this.fb = fb;\n    this.signUpForm = this.fb.group({\n      name: [\"\", Validators.required],\n      email: [\"\", [Validators.required, Validators.email]],\n      password: [\"\", Validators.required],\n      confirmPassword: [\"\", Validators.required]\n    }, {\n      validators: passwordsMatchValidator()\n    });\n  }\n  ngOnInit() {}\n  get email() {\n    return this.signUpForm.get(\"email\");\n  }\n  get password() {\n    return this.signUpForm.get(\"password\");\n  }\n  get confirmPassword() {\n    return this.signUpForm.get(\"confirmPassword\");\n  }\n  get name() {\n    return this.signUpForm.get(\"name\");\n  }\n  submit() {\n    const {\n      name,\n      email,\n      password\n    } = this.signUpForm.value;\n    if (!this.signUpForm.valid || !name || !password || !email) {\n      return;\n    }\n    this.AuthenticationService.signUp(email, password).pipe(switchMap(({\n      user: {\n        uid\n      }\n    }) => this.usersService.addUser({\n      uid,\n      email,\n      displayName: name\n    })), this.toast.observe({\n      success: \"Congrats! You are all signed up\",\n      loading: \"Signing up...\",\n      error: ({\n        message\n      }) => `${message}`\n    })).subscribe(() => {\n      this.router.navigate([\"/home\"]);\n    });\n  }\n};\nSignUpComponent = __decorate([Component({\n  selector: \"app-sign-up\",\n  templateUrl: \"./sign-up.component.html\",\n  styleUrls: [\"./sign-up.component.scss\"]\n})], SignUpComponent);\nexport { SignUpComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}