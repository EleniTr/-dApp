{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\nimport { HttpClientModule, HTTP_INTERCEPTORS } from \"@angular/common/http\";\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\nimport { HomeComponent } from \"./containers/home/home.component\";\nimport { ConnectComponent } from \"./components/connect/connect.component\";\nimport { CreateOrgComponent } from \"./components/create-org/create-org.component\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { MatFormFieldModule, MAT_FORM_FIELD_DEFAULT_OPTIONS } from \"@angular/material/form-field\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatDividerModule } from \"@angular/material/divider\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { MatRadioModule } from \"@angular/material/radio\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { ErrorInterceptor } from \"./helpers/error.interceptior\";\nimport { JwtInterceptor } from \"./helpers/jwt.interceptor\";\n// used to create fake backend\nimport { fakeBackendProvider } from \"./helpers/fake-backend\";\nimport { StoreModule } from \"@ngrx/store\";\nimport { reducers, metaReducers } from \"./reducers\";\nimport { EffectsModule } from \"@ngrx/effects\";\nimport * as fromUser from \"./reducers/user.reducer\";\nimport { UserEffects } from \"./effects/user.effects\";\nimport * as fromOrganization from \"./reducers/organization.reducer\";\nimport * as fromSongList from \"./reducers/song-list.reducer\";\nimport { OrganizationEffects } from \"./effects/organization.effects\";\n// import { SongListEffects } from \"./effects/song-list.effects\";\nimport { StoreDevtoolsModule } from \"@ngrx/store-devtools\";\nimport { GetOrgComponent } from \"./components/get-org/get-org.component\";\nimport { DetailOrgComponent } from \"./components/detail-org/detail-org.component\";\nimport { LoginComponent } from \"./components/login/login.component\";\nimport { SongListComponent } from \"./components/song-list/song-list.component\";\nimport { SignUpComponent } from \"./components/sign-up/sign-up.component\";\nimport { AlertComponent } from \"./components/alert/alert.component\";\nlet AppModule = class AppModule {};\nAppModule = __decorate([NgModule({\n  declarations: [AppComponent, HomeComponent, ConnectComponent, CreateOrgComponent, GetOrgComponent, DetailOrgComponent, LoginComponent, SongListComponent, SignUpComponent, AlertComponent],\n  imports: [BrowserModule, AppRoutingModule, ReactiveFormsModule, BrowserAnimationsModule, MatButtonModule, MatToolbarModule, MatFormFieldModule, MatInputModule, MatDividerModule, MatCardModule, MatRadioModule, MatIconModule, StoreModule.forRoot(reducers, {\n    metaReducers\n  }), StoreDevtoolsModule.instrument({\n    maxAge: 25\n  }), EffectsModule.forRoot([]), StoreModule.forFeature(fromSongList.songListFeatureKey, fromSongList.reducer), StoreModule.forFeature(fromUser.userFeatureKey, fromUser.reducer), EffectsModule.forFeature([UserEffects, OrganizationEffects\n  // SongListEffects,\n  ]), StoreModule.forFeature(fromOrganization.organizationFeatureKey, fromOrganization.reducer), HttpClientModule],\n  providers: [{\n    provide: MAT_FORM_FIELD_DEFAULT_OPTIONS,\n    useValue: {\n      floatLabel: \"never\"\n    }\n  }, {\n    provide: HTTP_INTERCEPTORS,\n    useClass: JwtInterceptor,\n    multi: true\n  }, {\n    provide: HTTP_INTERCEPTORS,\n    useClass: ErrorInterceptor,\n    multi: true\n  },\n  // provider used to create fake backend\n  fakeBackendProvider],\n  bootstrap: [AppComponent]\n})], AppModule);\nexport { AppModule };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}