{"ast":null,"code":"import { Validators } from \"@angular/forms\";\nimport { switchMap } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/authentication.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@ngneat/hot-toast\";\nimport * as i4 from \"../../services/user.services\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/material/form-field\";\nimport * as i9 from \"@angular/material/input\";\nfunction SignUpComponent_mat_error_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Name is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SignUpComponent_mat_error_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Email address is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SignUpComponent_mat_error_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Please enter a valid email address \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SignUpComponent_mat_error_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Password is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SignUpComponent_mat_error_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Confirm Password is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SignUpComponent_mat_error_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Passwords should match \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport function passwordsMatchValidator() {\n  return control => {\n    var _a, _b;\n    const password = (_a = control.get(\"password\")) === null || _a === void 0 ? void 0 : _a.value;\n    const confirmPassword = (_b = control.get(\"confirmPassword\")) === null || _b === void 0 ? void 0 : _b.value;\n    if (password && confirmPassword && password !== confirmPassword) {\n      return {\n        passwordsDontMatch: true\n      };\n    } else {\n      return null;\n    }\n  };\n}\nexport let SignUpComponent = /*#__PURE__*/(() => {\n  class SignUpComponent {\n    constructor(AuthenticationService, router, toast, usersService, fb) {\n      this.AuthenticationService = AuthenticationService;\n      this.router = router;\n      this.toast = toast;\n      this.usersService = usersService;\n      this.fb = fb;\n      this.signUpForm = this.fb.group({\n        name: [\"\", Validators.required],\n        email: [\"\", [Validators.required, Validators.email]],\n        password: [\"\", Validators.required],\n        confirmPassword: [\"\", Validators.required]\n      }, {\n        validators: passwordsMatchValidator()\n      });\n    }\n    ngOnInit() {}\n    get email() {\n      return this.signUpForm.get(\"email\");\n    }\n    get password() {\n      return this.signUpForm.get(\"password\");\n    }\n    get confirmPassword() {\n      return this.signUpForm.get(\"confirmPassword\");\n    }\n    get name() {\n      return this.signUpForm.get(\"name\");\n    }\n    submit() {\n      const {\n        name,\n        email,\n        password\n      } = this.signUpForm.value;\n      if (!this.signUpForm.valid || !name || !password || !email) {\n        return;\n      }\n      this.AuthenticationService.signUp(email, password).pipe(switchMap(({\n        user: {\n          uid\n        }\n      }) => this.usersService.addUser({\n        uid,\n        email,\n        displayName: name\n      })), this.toast.observe({\n        success: \"Congrats! You are all signed up\",\n        loading: \"Signing up...\",\n        error: ({\n          message\n        }) => `${message}`\n      })).subscribe(() => {\n        this.router.navigate([\"/home\"]);\n      });\n    }\n  }\n  SignUpComponent.ɵfac = function SignUpComponent_Factory(t) {\n    return new (t || SignUpComponent)(i0.ɵɵdirectiveInject(i1.AuthenticationService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.HotToastService), i0.ɵɵdirectiveInject(i4.UsersService), i0.ɵɵdirectiveInject(i5.NonNullableFormBuilder));\n  };\n  SignUpComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SignUpComponent,\n    selectors: [[\"app-sign-up\"]],\n    decls: 23,\n    vars: 7,\n    consts: [[1, \"form-container\", \"mat-elevation-z5\", \"signup-position\"], [1, \"card\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\"], [\"matInput\", \"\", \"placeholder\", \"Name\", \"formControlName\", \"name\"], [4, \"ngIf\"], [\"matInput\", \"\", \"placeholder\", \"Email address\", \"formControlName\", \"email\"], [\"matInput\", \"\", \"type\", \"password\", \"placeholder\", \"Password\", \"formControlName\", \"password\"], [\"matInput\", \"\", \"type\", \"password\", \"placeholder\", \"Confirm Password\", \"formControlName\", \"confirmPassword\"], [1, \"center\", \"margin-top\", \"buttons\"], [\"type\", \"submit\", \"mat-raised-button\", \"\", \"color\", \"primary\"], [\"routerLink\", \"../login\", 1, \"btn\", \"btn-link\"]],\n    template: function SignUpComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"form\", 3);\n        i0.ɵɵlistener(\"ngSubmit\", function SignUpComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.submit();\n        });\n        i0.ɵɵelementStart(4, \"mat-form-field\");\n        i0.ɵɵelement(5, \"input\", 4);\n        i0.ɵɵtemplate(6, SignUpComponent_mat_error_6_Template, 2, 0, \"mat-error\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"mat-form-field\");\n        i0.ɵɵelement(8, \"input\", 6);\n        i0.ɵɵtemplate(9, SignUpComponent_mat_error_9_Template, 2, 0, \"mat-error\", 5);\n        i0.ɵɵtemplate(10, SignUpComponent_mat_error_10_Template, 2, 0, \"mat-error\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"mat-form-field\");\n        i0.ɵɵelement(12, \"input\", 7);\n        i0.ɵɵtemplate(13, SignUpComponent_mat_error_13_Template, 2, 0, \"mat-error\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"mat-form-field\");\n        i0.ɵɵelement(15, \"input\", 8);\n        i0.ɵɵtemplate(16, SignUpComponent_mat_error_16_Template, 2, 0, \"mat-error\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(17, SignUpComponent_mat_error_17_Template, 2, 0, \"mat-error\", 5);\n        i0.ɵɵelementStart(18, \"div\", 9)(19, \"button\", 10);\n        i0.ɵɵtext(20, \"Sign Up!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"a\", 11);\n        i0.ɵɵtext(22, \"Cancel\");\n        i0.ɵɵelementEnd()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.signUpForm);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.name == null ? null : ctx.name.errors == null ? null : ctx.name.errors[\"required\"]);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.email == null ? null : ctx.email.errors == null ? null : ctx.email.errors[\"required\"]);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.email == null ? null : ctx.email.errors == null ? null : ctx.email.errors[\"email\"]);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.password == null ? null : ctx.password.errors == null ? null : ctx.password.errors[\"required\"]);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.confirmPassword == null ? null : ctx.confirmPassword.errors == null ? null : ctx.confirmPassword.errors[\"required\"]);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.signUpForm.errors == null ? null : ctx.signUpForm.errors[\"passwordsDontMatch\"]);\n      }\n    },\n    dependencies: [i6.NgIf, i2.RouterLink, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.FormGroupDirective, i5.FormControlName, i7.MatButton, i8.MatFormField, i8.MatError, i9.MatInput],\n    styles: [\".signup-position[_ngcontent-%COMP%]   .card[_ngcontent-%COMP%]{justify-content:center;display:flex;flex-direction:row;align-content:center;width:100%;max-width:430px;background:#25052d;border-radius:14px;padding:15px;z-index:1}.form-control[_ngcontent-%COMP%]{margin-bottom:15px;max-width:200px;height:30px}.signup-position[_ngcontent-%COMP%]   .btn-primary[_ngcontent-%COMP%]{color:#fff;font-weight:700;margin-top:15px;padding:10px;border:2px solid #fe5e88;background-color:#fe5e88;cursor:pointer;border-radius:4px}\"]\n  });\n  return SignUpComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}