{"ast":null,"code":"import { doc, docData, setDoc, updateDoc } from \"@angular/fire/firestore\";\nimport { from, of, switchMap } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/firestore\";\nimport * as i2 from \"./authentication.service\";\nexport let UsersService = /*#__PURE__*/(() => {\n  class UsersService {\n    constructor(firestore, AuthenticationService) {\n      this.firestore = firestore;\n      this.AuthenticationService = AuthenticationService;\n    }\n    get currentUserProfile$() {\n      return this.AuthenticationService.currentUser$.pipe(switchMap(user => {\n        if (!(user === null || user === void 0 ? void 0 : user.uid)) {\n          return of(null);\n        }\n        const ref = doc(this.firestore, \"users\", user === null || user === void 0 ? void 0 : user.uid);\n        return docData(ref);\n      }));\n    }\n    addUser(user) {\n      const ref = doc(this.firestore, \"users\", user.uid);\n      return from(setDoc(ref, user));\n    }\n    updateUser(user) {\n      const ref = doc(this.firestore, \"users\", user.uid);\n      return from(updateDoc(ref, Object.assign({}, user)));\n    }\n  }\n  UsersService.ɵfac = function UsersService_Factory(t) {\n    return new (t || UsersService)(i0.ɵɵinject(i1.Firestore), i0.ɵɵinject(i2.AuthenticationService));\n  };\n  UsersService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UsersService,\n    factory: UsersService.ɵfac,\n    providedIn: \"root\"\n  });\n  return UsersService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}