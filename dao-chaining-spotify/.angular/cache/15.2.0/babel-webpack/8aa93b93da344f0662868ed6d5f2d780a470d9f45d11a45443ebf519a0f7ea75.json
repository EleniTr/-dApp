{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { createEffect, ofType } from \"@ngrx/effects\";\nimport { map, switchMap } from \"rxjs/operators\";\nimport * as UserActions from \"../actions/user.actions\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nimport * as i2 from \"../services/contract.service\";\nexport let UserEffects = /*#__PURE__*/(() => {\n  class UserEffects {\n    constructor(actions$, contractService) {\n      this.actions$ = actions$;\n      this.contractService = contractService;\n      this.connect$ = createEffect(() => this.actions$.pipe(ofType(UserActions.connectUser), switchMap(() => __awaiter(this, void 0, void 0, function* () {\n        return yield this.contractService.connectAccount();\n      })), map(response => UserActions.connectUserSuccess({\n        user: response\n      }))));\n    }\n  }\n  UserEffects.ɵfac = function UserEffects_Factory(t) {\n    return new (t || UserEffects)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i2.ContractService));\n  };\n  UserEffects.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserEffects,\n    factory: UserEffects.ɵfac\n  });\n  return UserEffects;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}