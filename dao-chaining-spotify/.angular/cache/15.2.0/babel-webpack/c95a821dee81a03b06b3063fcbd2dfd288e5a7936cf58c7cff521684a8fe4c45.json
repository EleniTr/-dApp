{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/material/button\";\nimport * as i3 from \"@angular/material/form-field\";\nimport * as i4 from \"@angular/material/input\";\nexport let GetOrgComponent = /*#__PURE__*/(() => {\n  class GetOrgComponent {\n    constructor(fb) {\n      this.fb = fb;\n      this.get = new EventEmitter();\n      this.form = this.fb.group({\n        id: [null, Validators.required] // uint256\n      });\n    }\n\n    ngOnInit() {}\n    Submit() {\n      this.get.emit(this.form.value);\n    }\n  }\n  GetOrgComponent.ɵfac = function GetOrgComponent_Factory(t) {\n    return new (t || GetOrgComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n  GetOrgComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: GetOrgComponent,\n    selectors: [[\"app-get-org\"]],\n    outputs: {\n      get: \"get\"\n    },\n    decls: 10,\n    vars: 2,\n    consts: [[1, \"form-container\", 3, \"formGroup\"], [\"appearance\", \"outline\"], [\"matInput\", \"\", \"type\", \"text\", \"placeholder\", \"Name\", \"formControlName\", \"id\", \"placeholder\", \"uint256 number...\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"disabled\", \"click\"]],\n    template: function GetOrgComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h3\");\n        i0.ɵɵtext(2, \"Get an Organization\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\")(4, \"mat-form-field\", 1)(5, \"mat-label\");\n        i0.ɵɵtext(6, \"ID\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"input\", 2);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function GetOrgComponent_Template_button_click_8_listener() {\n          return ctx.Submit();\n        });\n        i0.ɵɵtext(9, \"Submit\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"disabled\", !ctx.form.valid);\n      }\n    },\n    dependencies: [i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i2.MatButton, i3.MatFormField, i3.MatLabel, i4.MatInput]\n  });\n  return GetOrgComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}